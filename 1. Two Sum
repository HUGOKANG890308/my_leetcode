class Solution:
 # chat 改善解 時間複雜度O(N)
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        num_map = {}  # 建立一個字典來存儲數字及其索引
        for i, num in enumerate(nums):
            complement = target - num
            if complement in num_map:
                return [num_map[complement], i]
            num_map[num] = i
        return []
    
    # ---- 我的解法時間複雜度O(n^2) ----
    # def twoSum(self, nums: List[int], target: int) -> List[int]:
    #     for i in range(len(nums)):
    #         ans = target - nums[i]
    #         for k in range(len(nums)):
    #             if i ==k :
    #                 continue
    #             if nums[k] == ans:
    #                 return [i,k]
